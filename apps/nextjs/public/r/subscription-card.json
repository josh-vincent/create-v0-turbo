{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "subscription-card",
  "type": "registry:ui",
  "title": "Subscription Card",
  "description": "Display and manage user subscription. Shows status, renewal date, and management actions.",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/ui/subscription-card/subscription-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { api } from \"@tocld/api/client\";\nimport { cn } from \"@tocld/ui/lib\";\n\ninterface SubscriptionCardProps {\n  className?: string;\n}\n\n/**\n * Display current subscription status with management options\n */\nexport function SubscriptionCard({ className }: SubscriptionCardProps) {\n  const { data: subscription, isLoading } = api.subscription.getCurrent.useQuery();\n  const cancelMutation = api.subscription.cancel.useMutation();\n  const resumeMutation = api.subscription.resume.useMutation();\n  const portalMutation = api.subscription.createBillingPortal.useMutation();\n\n  const handleManageBilling = async () => {\n    try {\n      const result = await portalMutation.mutateAsync({\n        returnUrl: window.location.href,\n      });\n      window.location.href = result.url;\n    } catch (error) {\n      console.error(\"Billing portal error:\", error);\n    }\n  };\n\n  const handleCancel = async () => {\n    if (!confirm(\"Are you sure you want to cancel your subscription?\")) return;\n\n    try {\n      await cancelMutation.mutateAsync();\n    } catch (error) {\n      console.error(\"Cancel error:\", error);\n    }\n  };\n\n  const handleResume = async () => {\n    try {\n      await resumeMutation.mutateAsync();\n    } catch (error) {\n      console.error(\"Resume error:\", error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className={cn(\"p-6 border rounded-lg\", className)}>\n        <p>Loading subscription...</p>\n      </div>\n    );\n  }\n\n  if (!subscription) {\n    return (\n      <div className={cn(\"p-6 border rounded-lg\", className)}>\n        <h3 className=\"text-lg font-semibold mb-2\">No Active Subscription</h3>\n        <p className=\"text-muted-foreground\">\n          You don't have an active subscription yet.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"p-6 border rounded-lg space-y-4\", className)}>\n      <div>\n        <h3 className=\"text-lg font-semibold\">Your Subscription</h3>\n        <p className=\"text-sm text-muted-foreground\">\n          {subscription.planName || \"Active Plan\"}\n        </p>\n      </div>\n\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Status</span>\n          <span className={cn(\n            \"font-medium capitalize\",\n            subscription.status === \"active\" && \"text-green-600\",\n            subscription.status === \"canceled\" && \"text-red-600\",\n            subscription.status === \"past_due\" && \"text-yellow-600\",\n          )}>\n            {subscription.status}\n          </span>\n        </div>\n\n        {subscription.currentPeriodEnd && (\n          <div className=\"flex justify-between text-sm\">\n            <span className=\"text-muted-foreground\">\n              {subscription.status === \"active\" ? \"Renews on\" : \"Expires on\"}\n            </span>\n            <span className=\"font-medium\">\n              {new Date(subscription.currentPeriodEnd).toLocaleDateString()}\n            </span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex gap-2 pt-4\">\n        <button\n          type=\"button\"\n          onClick={handleManageBilling}\n          disabled={portalMutation.isPending}\n          className=\"px-4 py-2 border rounded-md hover:bg-accent text-sm font-medium\"\n        >\n          {portalMutation.isPending ? \"Loading...\" : \"Manage Billing\"}\n        </button>\n\n        {subscription.status === \"active\" && !subscription.cancelAtPeriodEnd && (\n          <button\n            type=\"button\"\n            onClick={handleCancel}\n            disabled={cancelMutation.isPending}\n            className=\"px-4 py-2 border border-red-200 text-red-600 rounded-md hover:bg-red-50 text-sm font-medium\"\n          >\n            {cancelMutation.isPending ? \"Canceling...\" : \"Cancel\"}\n          </button>\n        )}\n\n        {subscription.cancelAtPeriodEnd && (\n          <button\n            type=\"button\"\n            onClick={handleResume}\n            disabled={resumeMutation.isPending}\n            className=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 text-sm font-medium\"\n          >\n            {resumeMutation.isPending ? \"Resuming...\" : \"Resume\"}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "categories": ["payment", "dashboard"]
}
