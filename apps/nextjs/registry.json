{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "@tocld/ui",
  "homepage": "https://github.com/yourusername/create-v0-turbo",
  "items": [
    {
      "name": "button",
      "type": "registry:ui",
      "title": "Button",
      "description": "A universal button component that works on web and native platforms.",
      "dependencies": ["class-variance-authority"],
      "files": [
        {
          "path": "registry/new-york/ui/button.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/ui/button.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/button.native.tsx",
          "type": "registry:ui"
        }
      ]
    },
    {
      "name": "input",
      "type": "registry:ui",
      "title": "Input",
      "description": "A universal input component that works on web and native platforms.",
      "files": [
        {
          "path": "registry/new-york/ui/input.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/ui/input.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/input.native.tsx",
          "type": "registry:ui"
        }
      ]
    },
    {
      "name": "primitives",
      "type": "registry:lib",
      "title": "Universal Primitives",
      "description": "Cross-platform primitive components for building universal UIs.",
      "files": [
        {
          "path": "registry/new-york/ui/primitives/types.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/ui/primitives/view.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/view.native.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/text.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/text.native.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/pressable.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/pressable.native.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/text-input.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/text-input.native.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/primitives/index.ts",
          "type": "registry:lib"
        }
      ]
    },
    {
      "name": "query-provider",
      "type": "registry:ui",
      "title": "Query Provider",
      "description": "TanStack Query provider with offline persistence support for both web and native.",
      "dependencies": ["@tanstack/react-query", "@tanstack/react-query-persist-client"],
      "devDependencies": ["@tanstack/react-query-devtools"],
      "files": [
        {
          "path": "registry/new-york/ui/query-provider.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/ui/query-provider.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/query-provider.native.tsx",
          "type": "registry:ui"
        }
      ]
    },
    {
      "name": "use-offline-query",
      "type": "registry:hook",
      "title": "useOfflineQuery Hook",
      "description": "Enhanced useQuery hook with offline-first behavior. Automatically shows stale data when offline.",
      "dependencies": ["@tanstack/react-query"],
      "registryDependencies": ["use-network-status"],
      "files": [
        {
          "path": "registry/new-york/ui/use-offline-query.ts",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "use-network-status",
      "type": "registry:hook",
      "title": "useNetworkStatus Hook",
      "description": "Universal hook to detect online/offline status. Works with browser APIs on web and NetInfo on native.",
      "files": [
        {
          "path": "registry/new-york/ui/use-network-status.tsx",
          "type": "registry:hook"
        },
        {
          "path": "registry/new-york/ui/use-network-status.native.tsx",
          "type": "registry:hook"
        }
      ]
    },
    {
      "name": "checkout-button",
      "type": "registry:ui",
      "title": "Checkout Button",
      "description": "Universal checkout button for Stripe/Polar payments. Handles checkout session creation and redirect.",
      "dependencies": ["class-variance-authority"],
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/ui/checkout-button/checkout-button.ts",
          "type": "registry:lib"
        },
        {
          "path": "registry/new-york/ui/checkout-button/checkout-button.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/checkout-button/checkout-button.native.tsx",
          "type": "registry:ui"
        }
      ],
      "categories": ["payment"]
    },
    {
      "name": "subscription-card",
      "type": "registry:ui",
      "title": "Subscription Card",
      "description": "Display and manage user subscription. Shows status, renewal date, and management actions.",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/ui/subscription-card/subscription-card.tsx",
          "type": "registry:ui"
        }
      ],
      "categories": ["payment", "dashboard"]
    },
    {
      "name": "connect-button",
      "type": "registry:ui",
      "title": "OAuth Connect Button",
      "description": "OAuth connect button for third-party integrations (Gmail, Outlook, Slack, etc.).",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/ui/connect-button/connect-button.tsx",
          "type": "registry:ui"
        }
      ],
      "categories": ["integration"]
    },
    {
      "name": "integrations-list",
      "type": "registry:ui",
      "title": "Integrations List",
      "description": "Complete integrations management UI. Shows connected and available OAuth providers.",
      "dependencies": [],
      "registryDependencies": ["connect-button"],
      "files": [
        {
          "path": "registry/new-york/ui/integrations-list/integrations-list.tsx",
          "type": "registry:ui"
        },
        {
          "path": "registry/new-york/ui/integrations-list/integration-card.tsx",
          "type": "registry:ui"
        }
      ],
      "categories": ["integration", "dashboard"]
    },
    {
      "name": "use-subscription-status",
      "type": "registry:hook",
      "title": "useSubscriptionStatus Hook",
      "description": "Check user subscription status with helper booleans (isActive, isPastDue, etc.).",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/hooks/use-subscription-status.ts",
          "type": "registry:hook"
        }
      ],
      "categories": ["payment"]
    },
    {
      "name": "use-integration-status",
      "type": "registry:hook",
      "title": "useIntegrationStatus Hook",
      "description": "Check OAuth integration connection status. Provides isConnected() helper and list of connected providers.",
      "dependencies": [],
      "registryDependencies": [],
      "files": [
        {
          "path": "registry/new-york/hooks/use-integration-status.ts",
          "type": "registry:hook"
        }
      ],
      "categories": ["integration"]
    }
  ]
}
